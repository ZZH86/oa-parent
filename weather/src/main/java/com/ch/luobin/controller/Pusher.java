package com.ch.luobin.controller;import com.ch.luobin.pojo.Forecast2;import com.ch.luobin.utils.*;import com.fasterxml.jackson.core.JsonProcessingException;import lombok.extern.slf4j.Slf4j;import me.chanjar.weixin.mp.api.WxMpService;import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;import me.chanjar.weixin.mp.bean.template.WxMpTemplateData;import me.chanjar.weixin.mp.bean.template.WxMpTemplateMessage;import me.chanjar.weixin.mp.config.impl.WxMpDefaultConfigImpl;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Component;import org.springframework.stereotype.Controller;import java.util.ArrayList;import java.util.List;@Slf4j@Component@Controllerpublic class Pusher {    /**     * 测试公众号的 id     */    private static String appId;    /**     * 测试公众号的 密钥     */    private static String secret;    /**     * 对方微信id     */    private static String user;//    private static String user2;    /**     * 消息模板id     */    private static String templateId;    @Value("${com.secret}")    public void setSecret(String secret) {Pusher.secret= secret;}    @Value("${com.user}")    public void setUser(String user) {Pusher.user= user;}    @Value("${com.templateId}")    public void setTemplateId(String templateId) {Pusher.templateId= templateId;}    @Value("${com.appId}")    public void setAppId(String appId) {Pusher.appId= appId;}    void contextLoads() {        push();    }    public static void push(){        //1，配置        WxMpDefaultConfigImpl wxStorage = new WxMpDefaultConfigImpl();        wxStorage.setAppId(appId);        wxStorage.setSecret(secret);        WxMpService wxMpService = new WxMpServiceImpl();        wxMpService.setWxMpConfigStorage(wxStorage);        // 推送消息        //TODO 多个用户这里解决        ArrayList<WxMpTemplateMessage> wxMpTemplateMessages = new ArrayList<>();        WxMpTemplateMessage templateMessage1 = WxMpTemplateMessage.builder()                .toUser(user) // 对方微信                .templateId(templateId) // 消息模板                .build();        WxMpTemplateMessage templateMessage2 = WxMpTemplateMessage.builder()                .toUser("oErZD50xT4mrIRt6j7erSH1QOJGw") // 对方微信                .templateId(templateId) // 消息模板                .build();        wxMpTemplateMessages.add(templateMessage1);        wxMpTemplateMessages.add(templateMessage2);        String caiHongPi = CaiHongPiUtils.getCaiHongPi();        log.info("彩虹屁：" + caiHongPi);        String tuWeiQingHua = TuWeiQingHuaUtils.getTuWeiQingHua();        log.info("情话：" + tuWeiQingHua);        for (WxMpTemplateMessage templateMessage : wxMpTemplateMessages) {            // 配置你的信息            Forecast2 weather = new Forecast2();            try {                weather = WeatherUtils.getWeather();            } catch (JsonProcessingException e) {                System.out.println("获取天气失败");                e.printStackTrace();            }            int birthday_jo = JiNianRiUtils.getBirthday_Jo(); // 计算 生日倒计时            int lianAi = JiNianRiUtils.getLianAi(); // 计算 相恋天数            String fengli = weather.getWindsc();            int fengliI = (int) fengli.charAt(0);            String fengliName = null; String fengliColour = null;            if (fengliI == 0){                fengliName = "无风"; fengliColour = "#99FF00";            } else if (fengliI < 3) {                fengliName = "轻风"; fengliColour = "#99FF00";            } else if (fengliI == 3) {                fengliName = "微风"; fengliColour = "#99FF00";            } else if (fengliI == 4) {                fengliName = "和风"; fengliColour = "#FFFF99";            } else if (fengliI == 5) {                fengliName = "清风"; fengliColour = "#FFFF00";            } else if (fengliI == 6) {                fengliName = "强风"; fengliColour = "#FF9933";            } else if (fengliI == 7) {                fengliName = "劲风+"; fengliColour = "#FF3300";            } else if (fengliI > 7) {                fengliName = "大风+"; fengliColour = "#990000";            }            templateMessage.addData(new WxMpTemplateData("riqi", weather.getDate(), "#00BFFF")); // 日期            templateMessage.addData(new WxMpTemplateData("tianqi", weather.getWeather(),"#00FFFF")); // 天气            templateMessage.addData(new WxMpTemplateData("ganmao", weather.getTips(), RandomColor.randomColour())); // 感冒情况            templateMessage.addData(new WxMpTemplateData("city", weather.getProvince(), "#000000")); // 地区            templateMessage.addData(new WxMpTemplateData("wendu", weather.getReal()+"℃","#000000")); // 当前温度            templateMessage.addData(new WxMpTemplateData("fengli", fengliName+fengli, fengliColour)); // 风量            templateMessage.addData(new WxMpTemplateData("low",weather.getLowest() + "","#173177")); // 最低气温            templateMessage.addData(new WxMpTemplateData("high",weather.getHighest()+ "","#FF6347" )); // 最高气温            templateMessage.addData(new WxMpTemplateData("caihongpi", caiHongPi + "")); // 彩虹屁            templateMessage.addData(new WxMpTemplateData("qinghua", "    " + tuWeiQingHua)); // 彩虹屁            templateMessage.addData(new WxMpTemplateData("lianai", lianAi +"","#FF1493")); // 相恋天数            templateMessage.addData(new WxMpTemplateData("shengri",birthday_jo + "","#FFA500")); //生日倒计时            templateMessage.addData(new WxMpTemplateData("meme", MemeUtils.randomMeme())); //颜文字            String beizhu = "";            if(lianAi % 365 == 0){ beizhu += "❤今天是恋爱" + (lianAi / 365) + "周年纪念日！"; }            if(lianAi % 100 == 0){ beizhu += "❤今天是恋爱" + lianAi + "天纪念日！"; }            if(lianAi == 1314){ beizhu += "❤今天是恋爱" + lianAi + "天纪念日！"; }            if(birthday_jo == 0){ beizhu += "❤今天是生日，生日快乐呀！"; }            templateMessage.addData(new WxMpTemplateData("beizhu", beizhu, "#FF0000"));        }        try {            for (WxMpTemplateMessage templateMessage : wxMpTemplateMessages) {                System.out.println(templateMessage.toJson());                System.out.println(wxMpService.getTemplateMsgService().sendTemplateMsg(templateMessage));            }        } catch (Exception e) {            System.out.println("推送失败：" + e.getMessage());            e.printStackTrace();        }    }}